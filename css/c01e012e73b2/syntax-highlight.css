.codehilite code,.codelike{background:var(--code-bg);border:1.5px solid #d3d3d3;border-radius:var(--standard-border-radius);color:var(--code-fg);display:block;padding:1rem;overflow:auto}.code,.codehilite,code{font-family:"Source Code Pro",monospace}.codehilite{font-size:.7rem}.codehilite .hll{background-color:#ffc}.codehilite .c{color:var(--hl-comment)}.codehilite .k{color:var(--hl-keyword);font-weight:700}.codehilite .cm{color:var(--hl-comment)}.codehilite .cp{color:var(--hl-preproc-comment)}.codehilite .c1,.codehilite .cs{color:var(--hl-comment)}.codehilite .ge{font-style:italic}.codehilite .gh,.codehilite .gp,.codehilite .gs,.codehilite .gu{font-weight:700}.codehilite .kc{color:var(--hl-constant)}.codehilite .kd{color:var(--hl-declaration);font-weight:700}.codehilite .kd+.nx,.codehilite .kr+.nx{color:var(--hl-macro);font-weight:700}.codehilite .kn{color:var(--hl-namespace)}.codehilite .kp{color:var(--hl-pseudo)}.codehilite .kr{color:var(--hl-reserved);font-weight:700}.codehilite .kt{color:var(--hl-type)}.codehilite .s{color:var(--hl-string)}.codehilite .nc{color:var(--hl-class)}.codehilite .ow{color:var(--hl-word)}.codehilite .sb{color:var(--hl-backtick-string)}.codehilite .sc{color:var(--hl-string-char)}.codehilite .sd{color:var(--hl-string-doc)}.codehilite .s2{color:var(--hl-string-double)}.codehilite .se{color:var(--hl-string-escape)}.codehilite .sh{color:var(--hl-string-heredoc)}.codehilite .si{color:var(--hl-string-interpol)}.codehilite .sx{color:var(--hl-string-other)}.codehilite .sr{color:var(--hl-string-regex)}.codehilite .s1{color:var(--hl-string-single)}.codehilite .ss{color:var(--hl-string-symbol)}.codehilite .definition,.codehilite .macro{color:var(--hl-macro)}.codehilite .core-fn{color:var(--hl-core-fn)}.codehilite .variable{color:var(--hl-variable)}.codehilite .number{color:var(--hl-number)}.codehilite .special-form{color:var(--hl-special-form)}.codehilite .string{color:var(--hl-string)}.codehilite .keyword{color:var(--hl-keyword)}.codehilite .reader-char{color:var(--hl-reader-char)}.codehilite .nil{color:var(--hl-nil)}.codehilite .comment{color:var(--hl-comment)}.codehilite .repeat{color:var(--hl-repeat)}.codehilite .regex{color:var(--hl-regexp)}.codehilite .exception{color:var(--hl-exception)}.codehilite .boolean{color:var(--hl-boolean)}.codehilite .character{color:var(--hl-character)}.codehilite .conditional{color:var(--hl-conditional)}